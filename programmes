#################### PATTERN NO 1 ############################



import java.util.Scanner;

public class vishwa {
public static void main(String[] args) {
       Scanner input=new Scanner(System.in);
       int n=input.nextInt();
        for(int i=n;i>=1;i--){
          for(int k=1;k<=n-i;k++){
               System.out.print(" ");
           } 
           for(int j=1;j<=(2*i)-1;j++){
               System.out.print("*");
           }
           System.out.println();
       }
       
       for(int i=1;i<=n;i++){
          for(int k=1;k<=n-i;k++){
               System.out.print(" ");
           } 
           for(int j=1;j<=(2*i)-1;j++){
               System.out.print("*");
           }
           System.out.println();
       }


}
}




############################################# PATTERN 2 #################################################


import java.util.Scanner;

public class vishwa {
public static void main(String[] args) {
       Scanner input=new Scanner(System.in);
       int n=input.nextInt();
       int sum=1;
       for(int i=1;i<=n;i++){
          for(int k=1;k<=n-i;k++){
               System.out.print(" ");
           } 
           for(int j=1;j<=1;j++){
               System.out.print(String.valueOf(sum).replaceAll("", " ").trim());
           }
           if(sum==1){
               sum=11*11;
           }
           else{
           sum=sum*11;
           }
           System.out.println();
       }


}
}




############################################### LINKED LIST ###########################################################


class LinkedListExample {

    class Node {
        int data;
        Node next;
        Node(int data) {
            this.data = data;
            this.next = null;
        }
    }

    Node head = null;

    void add(int data) {
        Node newNode = new Node(data);
        if (head == null) {
            head = newNode;
        } else {
            Node temp = head;
            while (temp.next != null) {
                temp = temp.next;
            }
            temp.next = newNode;
        }
    }

    void deleteAtPosition(int position) {
        if (head == null) return;
        if (position == 1) {
            head = head.next;
            return;
        }
        Node temp = head;
        for (int i = 1; temp != null && i < position - 1; i++) {
            temp = temp.next;
        }
        if (temp == null || temp.next == null) return;
        temp.next = temp.next.next;
    }

    void printList() {
        Node temp = head;
        while (temp != null) {
            System.out.print(temp.data + " ");
            temp = temp.next;
        }
        System.out.println();
    }

    public static void main(String[] args) {
        LinkedListExample list = new LinkedListExample();
        list.add(10);
        list.add(20);
        list.add(30);
        list.add(40);
        list.add(50);

        System.out.print("Before Deletion: ");
        list.printList();

        list.deleteAtPosition(3);

        System.out.print("After Deletion: ");
        list.printList();
    }
}

#############################################################################################################################3
